/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface Midwest360Image {
        "height": number;
        "nolazyload": boolean;
        "poster": string;
        "src": string;
        "width": number;
    }
    interface Midwest360Video {
        "height": number;
        "poster": string;
        "src": string;
        "width": number;
    }
    interface MidwestImage {
        "alt": string;
        "bg": string;
        "block": boolean;
        "height": number;
        "large": string;
        "medium": () => Promise<any>;
        "nozoom": boolean;
        "poster": string;
        "type": "background" | "picture";
        "width": number;
    }
    interface MidwestInterview {
        "aspectRatio": number;
        "color": string;
        "height": number;
        "pause": () => Promise<void>;
        "play": () => Promise<void>;
        "playing": boolean;
        "skipTo": (time: number) => Promise<void>;
        "src": string;
        "toggle": () => Promise<void>;
        "visualization": "circle" | "bars" | "wave" | "bars2";
        "width": number;
    }
    interface MidwestInterviewLine {
        "complement": boolean;
        "in": number;
        "out": number;
    }
    interface MidwestPlaylist {
        "artwork": boolean;
        "autoplay": boolean;
        "dark": boolean;
        "load": boolean;
        "loading": boolean;
        "name": string;
        "next": () => Promise<void>;
        "pause": () => Promise<void>;
        "play": (skipDefault?: boolean) => Promise<void>;
        "playing": boolean;
        "playlist": "show" | "hide";
        "prepare": (element: any) => Promise<void>;
        "previous": () => Promise<void>;
        "remember": boolean;
        "view": "playlist" | "art";
        "visualizationColor": string;
        "visualizationType": "bars" | "bars2" | "wave" | "circle";
    }
    interface MidwestSong {
        "artwork": boolean;
        "details": () => Promise<{ title: string; album: string; genre: string; artist: string; picture: string; }>;
        "getIndex": () => Promise<number>;
        "load": () => Promise<void>;
        "play": () => Promise<void>;
        "playing": boolean;
        "preload": () => Promise<void>;
        "setIndex": (value: any) => Promise<void>;
        "src": string;
        "switching": () => Promise<void>;
    }
    interface MidwestVideo {
        "autoplay": boolean;
        "controls": boolean;
        "getDuration": () => Promise<number>;
        "height": number;
        "loop": boolean;
        "muted": boolean;
        "overlay": boolean;
        "pause": () => Promise<void>;
        "play": () => Promise<void>;
        "playing": boolean;
        "playsinline": boolean;
        "poster": string;
        "preload": string;
        "skipTo": (time: any) => Promise<void>;
        "stop": () => Promise<void>;
        "toggle": () => Promise<void>;
        "trackInView": boolean;
        "videoElement": () => Promise<HTMLVideoElement>;
        "width": number;
    }
    interface MidwestVideoInterview {
        "aspectRatio": number;
        "color": string;
        "height": number;
        "pause": () => Promise<void>;
        "play": () => Promise<void>;
        "playing": boolean;
        "skipTo": (time: number) => Promise<void>;
        "src": string;
        "toggle": () => Promise<void>;
        "visualization": "circle" | "bars" | "wave" | "bars2";
        "width": number;
    }
    interface SkeletonImg {
        "block": boolean;
        "height": number;
        "icon": boolean;
        "loading": boolean;
        "width": number;
    }
    interface SkeletonText {
        "as": string | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p';
        "loading": boolean;
        "width": number;
    }
}
declare global {
    interface HTMLMidwest360ImageElement extends Components.Midwest360Image, HTMLStencilElement {
    }
    var HTMLMidwest360ImageElement: {
        prototype: HTMLMidwest360ImageElement;
        new (): HTMLMidwest360ImageElement;
    };
    interface HTMLMidwest360VideoElement extends Components.Midwest360Video, HTMLStencilElement {
    }
    var HTMLMidwest360VideoElement: {
        prototype: HTMLMidwest360VideoElement;
        new (): HTMLMidwest360VideoElement;
    };
    interface HTMLMidwestImageElement extends Components.MidwestImage, HTMLStencilElement {
    }
    var HTMLMidwestImageElement: {
        prototype: HTMLMidwestImageElement;
        new (): HTMLMidwestImageElement;
    };
    interface HTMLMidwestInterviewElement extends Components.MidwestInterview, HTMLStencilElement {
    }
    var HTMLMidwestInterviewElement: {
        prototype: HTMLMidwestInterviewElement;
        new (): HTMLMidwestInterviewElement;
    };
    interface HTMLMidwestInterviewLineElement extends Components.MidwestInterviewLine, HTMLStencilElement {
    }
    var HTMLMidwestInterviewLineElement: {
        prototype: HTMLMidwestInterviewLineElement;
        new (): HTMLMidwestInterviewLineElement;
    };
    interface HTMLMidwestPlaylistElement extends Components.MidwestPlaylist, HTMLStencilElement {
    }
    var HTMLMidwestPlaylistElement: {
        prototype: HTMLMidwestPlaylistElement;
        new (): HTMLMidwestPlaylistElement;
    };
    interface HTMLMidwestSongElement extends Components.MidwestSong, HTMLStencilElement {
    }
    var HTMLMidwestSongElement: {
        prototype: HTMLMidwestSongElement;
        new (): HTMLMidwestSongElement;
    };
    interface HTMLMidwestVideoElement extends Components.MidwestVideo, HTMLStencilElement {
    }
    var HTMLMidwestVideoElement: {
        prototype: HTMLMidwestVideoElement;
        new (): HTMLMidwestVideoElement;
    };
    interface HTMLMidwestVideoInterviewElement extends Components.MidwestVideoInterview, HTMLStencilElement {
    }
    var HTMLMidwestVideoInterviewElement: {
        prototype: HTMLMidwestVideoInterviewElement;
        new (): HTMLMidwestVideoInterviewElement;
    };
    interface HTMLSkeletonImgElement extends Components.SkeletonImg, HTMLStencilElement {
    }
    var HTMLSkeletonImgElement: {
        prototype: HTMLSkeletonImgElement;
        new (): HTMLSkeletonImgElement;
    };
    interface HTMLSkeletonTextElement extends Components.SkeletonText, HTMLStencilElement {
    }
    var HTMLSkeletonTextElement: {
        prototype: HTMLSkeletonTextElement;
        new (): HTMLSkeletonTextElement;
    };
    interface HTMLElementTagNameMap {
        "midwest-360-image": HTMLMidwest360ImageElement;
        "midwest-360-video": HTMLMidwest360VideoElement;
        "midwest-image": HTMLMidwestImageElement;
        "midwest-interview": HTMLMidwestInterviewElement;
        "midwest-interview-line": HTMLMidwestInterviewLineElement;
        "midwest-playlist": HTMLMidwestPlaylistElement;
        "midwest-song": HTMLMidwestSongElement;
        "midwest-video": HTMLMidwestVideoElement;
        "midwest-video-interview": HTMLMidwestVideoInterviewElement;
        "skeleton-img": HTMLSkeletonImgElement;
        "skeleton-text": HTMLSkeletonTextElement;
    }
}
declare namespace LocalJSX {
    interface Midwest360Image {
        "height"?: number;
        "nolazyload"?: boolean;
        "poster"?: string;
        "src"?: string;
        "width"?: number;
    }
    interface Midwest360Video {
        "height"?: number;
        "poster"?: string;
        "src"?: string;
        "width"?: number;
    }
    interface MidwestImage {
        "alt"?: string;
        "bg"?: string;
        "block"?: boolean;
        "height"?: number;
        "large"?: string;
        "nozoom"?: boolean;
        "poster"?: string;
        "type"?: "background" | "picture";
        "width"?: number;
    }
    interface MidwestInterview {
        "aspectRatio"?: number;
        "color"?: string;
        "height"?: number;
        "playing"?: boolean;
        "src"?: string;
        "visualization"?: "circle" | "bars" | "wave" | "bars2";
        "width"?: number;
    }
    interface MidwestInterviewLine {
        "complement"?: boolean;
        "in"?: number;
        "out"?: number;
    }
    interface MidwestPlaylist {
        "artwork"?: boolean;
        "autoplay"?: boolean;
        "dark"?: boolean;
        "load"?: boolean;
        "loading"?: boolean;
        "name"?: string;
        "onLoad_songs"?: (event: CustomEvent<any>) => void;
        "playing"?: boolean;
        "playlist"?: "show" | "hide";
        "remember"?: boolean;
        "view"?: "playlist" | "art";
        "visualizationColor"?: string;
        "visualizationType"?: "bars" | "bars2" | "wave" | "circle";
    }
    interface MidwestSong {
        "artwork"?: boolean;
        "onLoaded"?: (event: CustomEvent<any>) => void;
        "onSongChanged"?: (event: CustomEvent<any>) => void;
        "playing"?: boolean;
        "src"?: string;
    }
    interface MidwestVideo {
        "autoplay"?: boolean;
        "controls"?: boolean;
        "height"?: number;
        "loop"?: boolean;
        "muted"?: boolean;
        "onLoaded"?: (event: CustomEvent<any>) => void;
        "onPaused"?: (event: CustomEvent<any>) => void;
        "onPlayed"?: (event: CustomEvent<any>) => void;
        "onUpdate"?: (event: CustomEvent<any>) => void;
        "overlay"?: boolean;
        "playing"?: boolean;
        "playsinline"?: boolean;
        "poster"?: string;
        "preload"?: string;
        "trackInView"?: boolean;
        "width"?: number;
    }
    interface MidwestVideoInterview {
        "aspectRatio"?: number;
        "color"?: string;
        "height"?: number;
        "playing"?: boolean;
        "src"?: string;
        "visualization"?: "circle" | "bars" | "wave" | "bars2";
        "width"?: number;
    }
    interface SkeletonImg {
        "block"?: boolean;
        "height"?: number;
        "icon"?: boolean;
        "loading"?: boolean;
        "width"?: number;
    }
    interface SkeletonText {
        "as"?: string | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p';
        "loading"?: boolean;
        "width"?: number;
    }
    interface IntrinsicElements {
        "midwest-360-image": Midwest360Image;
        "midwest-360-video": Midwest360Video;
        "midwest-image": MidwestImage;
        "midwest-interview": MidwestInterview;
        "midwest-interview-line": MidwestInterviewLine;
        "midwest-playlist": MidwestPlaylist;
        "midwest-song": MidwestSong;
        "midwest-video": MidwestVideo;
        "midwest-video-interview": MidwestVideoInterview;
        "skeleton-img": SkeletonImg;
        "skeleton-text": SkeletonText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "midwest-360-image": LocalJSX.Midwest360Image & JSXBase.HTMLAttributes<HTMLMidwest360ImageElement>;
            "midwest-360-video": LocalJSX.Midwest360Video & JSXBase.HTMLAttributes<HTMLMidwest360VideoElement>;
            "midwest-image": LocalJSX.MidwestImage & JSXBase.HTMLAttributes<HTMLMidwestImageElement>;
            "midwest-interview": LocalJSX.MidwestInterview & JSXBase.HTMLAttributes<HTMLMidwestInterviewElement>;
            "midwest-interview-line": LocalJSX.MidwestInterviewLine & JSXBase.HTMLAttributes<HTMLMidwestInterviewLineElement>;
            "midwest-playlist": LocalJSX.MidwestPlaylist & JSXBase.HTMLAttributes<HTMLMidwestPlaylistElement>;
            "midwest-song": LocalJSX.MidwestSong & JSXBase.HTMLAttributes<HTMLMidwestSongElement>;
            "midwest-video": LocalJSX.MidwestVideo & JSXBase.HTMLAttributes<HTMLMidwestVideoElement>;
            "midwest-video-interview": LocalJSX.MidwestVideoInterview & JSXBase.HTMLAttributes<HTMLMidwestVideoInterviewElement>;
            "skeleton-img": LocalJSX.SkeletonImg & JSXBase.HTMLAttributes<HTMLSkeletonImgElement>;
            "skeleton-text": LocalJSX.SkeletonText & JSXBase.HTMLAttributes<HTMLSkeletonTextElement>;
        }
    }
}
